<tool id="hyperstack_to_bleach_corrected_movie" name="Generate movie from hyperstack" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="20.01" license="MIT">
    <description>with bleach correction</description>
    <macros>
        <token name="@TOOL_VERSION@">20230328</token>
        <token name="@VERSION_SUFFIX@">0</token>
        <xml name="bleach_param">
            <param name="media_change_points" type="text" value="" label="Indices of frames just before the media was changed separated by comma (1-based excluding last index)">
                <sanitizer invalid_char="">
                    <valid initial="string.digits">
                        <add value="," />
                    </valid>
                </sanitizer>
                <validator type="regex">[0-9,]*</validator>
            </param>
            <param name="normalize_to_first_chunk" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Normalize to the first chunk" help="Set to true gives prettier movies" />
        </xml>
    </macros>
    <requirements>
        <!-- I need CorrectBleach_-2.1.0 which should be in next Fiji version -->
        <!-- If you need it you can download https://maven.scijava.org/service/local/repositories/releases/content/sc/fiji/CorrectBleach_/2.1.0/CorrectBleach_-2.1.0.jar into plugins -->
        <requirement type="package" version="20220414">Fiji</requirement>
        <requirement type="package" version="5.1.2">ffmpeg</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        ImageJ --ij2 --headless --console --run '$__tool_directory__/'bleach_correction_movie.groovy 
            'image_filename="${image_filename}",starting_time_hour="${starting_time_hour}",x="${x}",y="${y}",frame_per_second="${frame_per_second}",bleach_cor_channel="${bleach_cor.bleach_cor_channel}",media_change_points="${bleach_cor.media_change_points}",normalize_to_first_chunk="${bleach_cor.normalize_to_first_chunk}",channels_in_film_comma="${channels_in_film}",display_scalebar="${scalebar.display_scalebar}",scale="${scalebar.scale}",min_grey="${minmax.min_grey}",max_grey="${minmax.max_grey}",min_green="${minmax.min_green}",max_green="${minmax.max_green}",min_red="${minmax.min_red}",max_red="${minmax.max_red}"' > output.log
        && ffmpeg -i *avi -vf "pad=ceil(iw/2)*2:ceil(ih/2)*2,format=yuv420p" Movie.mp4
    ]]></command>
    <inputs>
        <param name="image_filename" type="data" format="tiff" multiple="false" label="Stack image to convert" />
        <param name="starting_time_hour" type="integer" min="0" value="" label="Time of the first time point (in hour)" />
        <param name="x" type="integer" value="5" label="x position of the time" />
        <param name="y" type="integer" value="105" label="y position of the time" />
        <param name="frame_per_second" type="integer" value="2" label="Number of frames per second in avi" />
        <conditional name="bleach_cor">
            <param name="bleach_cor_channel" type="select" label="Channel to be bleach corrected" >
                <option value="None">No need of bleach correction</option>
                <option value="Green">Green</option>
                <option value="Red">Red</option>
                <option value="Grays">Grays</option>
            </param>
            <when value="None">
                <param name="media_change_points" type="hidden" value=""/>
                <param name="normalize_to_first_chunk" type="hidden" value="false"/>
            </when>
            <when value="Green">
                <expand macro="bleach_param"/>
            </when>
            <when value="Red">
                <expand macro="bleach_param"/>
            </when>
            <when value="Grays">
                <expand macro="bleach_param"/>
            </when>
        </conditional>
        <param name="channels_in_film" type="select" label="Channels to include in the movie" multiple="true" display="checkboxes">
            <option value="Grays">Grays</option>
            <option value="Green">Green</option>
            <option value="Red">Red</option>
        </param>
        <conditional name="scalebar">
            <param name="display_scalebar" type="select" label="Display a scalebar">
                <option value="true">Yes</option>
                <option value="false">No</option>
            </param>
            <when value="true">
                <param name="scale" type="float" value="1.24" label="Scale (size of 1 pixel in um)" help="For incucyte use 2.82 for 4x, 1.24 for 10x, 0.62 for 20x" />
            </when>
            <when value="false">
                <param name="scale" type="hidden" value="0"/>
            </when>
        </conditional>
        <section name="minmax" title="Set min max display values" expanded="false">
            <param name="min_grey" type="float" min="-1" max="65535" value="-1" label="minimum display value for Grays (-1 for auto)" />
            <param name="max_grey" type="float" min="-1" max="65535" value="-1" label="maximum display value for Grays (-1 for auto)" />
            <param name="min_green" type="float" min="-1" max="65535" value="-1" label="minimum display value for Green (-1 for auto)" />
            <param name="max_green" type="float" min="-1" max="65535" value="-1" label="maximum display value for Green (-1 for auto)" />
            <param name="min_red" type="float" min="-1" max="65535" value="-1" label="minimum display value for Red (-1 for auto)" />
            <param name="max_red" type="float" min="-1" max="65535" value="-1" label="maximum display value for Red (-1 for auto)" />
        </section>
    </inputs>
    <outputs>
        <data name="logfile" format="txt" from_work_dir="output.log" label="${tool.name} on ${on_string}: logfile" />
        <data name="movie" format="mp4" from_work_dir="Movie.mp4" label="${tool.name} on ${on_string}: movie" />
    </outputs>
    <tests>
        <!-- <test>
            <param name="image_filename" value="G4_1_merge.tiff"/>
            <param name="channels_in_film" value="Grays,Green"/>
            <param name="starting_time_hour" value="48"/>
            <conditional name="bleach_cor">
                <param name="bleach_cor_channel" value="Green"/>
                <param name="normalize_to_first_chunk" value="true"/>
                <param name="media_change_points" value="1,12,24"/>
            </conditional>
            <conditional name="scalebar">
                <param name="display_scalebar" value="true"/>
                <param name="scale" value="1.24"/>
            </conditional>
            <section name="minmax">
                <param name="min_green" value="1250"/>
                <param name="max_green" value="1360"/>
            </section>
            <output name="movie">
                <assert_contents>
                    <has_size value="6004060" delta="600000"/>
                </assert_contents>
            </output>
            <output name="logfile">
                <assert_contents>
                    <has_text text="3095.5504420746947,0.022024824523925787,-421.6082446649406"/>
                </assert_contents>
            </output>
        </test> -->
    </tests>
    <help><![CDATA[

.. class:: infomark

**What it does**

It will use an image which is a hyperstack where colors of channels are among Grays, Green, Red and performs bleach correction using exponential fit on one channel if requested. It can also perform bleach correction by chunk. Then it adds an overlay with the time in (H)HH:MM format starting at the timepoint requestd by the user. The format of the stack name shoud match prefix_YYYYyMMmDDd_HHhMM.

Usage
.....


**Input**

- An hyperstack image.
- And different parameters such as the time of the first image, the position for the time label, the channels to use in the film, the channels to bleach correct etc...

**Output**

- A log file with info
- A movie in avi.

    ]]></help>
</tool>
